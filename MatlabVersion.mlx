%% First Matlab file

%% Visualize a cube that rotates in 3D, and its 2D projection. Made with linear transformations.

% Coordinates of vertices (points) of the cube and the data that connects
% it to faces (faces). See https://es.mathworks.com/help/matlab/visualize/multifaceted-patches.html
points = [0.5, 0.5, -0.5; %1
    0.5, 0.5, 0.5; %2
    0.5, -0.5, -0.5; %3
    0.5, -0.5, 0.5; %4
    -0.5, 0.5, -0.5; %5
    -0.5, 0.5, 0.5; %6
    -0.5, -0.5, -0.5; %7
    -0.5, -0.5, 0.5]; %8
faces = [3 1 2 4;
         1 5 6 2;
         5 7 8 6;
         3 7 8 4;
         4 2 6 8;
         3 1 5 7];

% Define rotation matrices
phi = 58;
theta = 42;
psi = 32;


XrollMatrix = [1, 0, 0;
               0, cosd(phi), sind(phi);
               0, -sind(phi), cosd(phi)];
YpitchMatrix = [cosd(theta), 0, -sind(theta);
                0, 1, 0;
                sind(theta), 0, cosd(theta)];
ZyawMatrix = [cosd(psi), sind(psi), 0;
             -sind(psi), cosd(psi), 0;
             0, 0, 1];

% Rotate the cube
for n = [1:8]
    points(n,:) = (XrollMatrix*points(n,:)')';
    points(n,:) = (YpitchMatrix*points(n,:)')';
    points(n,:) = (ZyawMatrix*points(n,:)')';
end
points;

% 3-D graph of the cube
patch("Vertices", points, "Faces", faces, 'FaceVertexCData',hsv(6),'FaceColor','flat')
view(3)
axis square
xlim([-1 1])
ylim([-1 1])
zlim([-1 1])
xlabel("X")
ylabel("Y")
view([1, 90])

% Project transform (set new 2D vertex data and face data)
projectMatrix = [1 0 0; 0 1 0];
for n=[1:8]
    points(n, [1:2]) = (projectMatrix*points(n, :)')';
end
points = points(:, [1:2]);
faces2D = [8, 6, 5, 7;
           2, 1, 3, 4;
           5, 1, 3, 7;
           6, 2, 4, 8; %
           8, 4, 3, 7; 
           1, 5, 6, 2];

%2-D graph of the cube
figure
patch("Vertices", points, "Faces", faces2D, 'FaceVertexCData',hsv(8), 'FaceColor','green')
axis square
xlim([-1 1])
ylim([-1 1])
xlabel("X")
ylabel("Y")
